/**
 * Палиндромом называется строка, которая читается одинаково слева-направо и справа-налево.
 * В заданной строке-палиндроме необходимо заменить один символ, чтобы она перестала быть палиндромом. При этом
 * полученная строка должна быть лексикографически минимальной. Строка A лексикографически меньше строки B (той
 * же длины), если на первой различающейся позиции в строке A стоит меньший символ, чем в B. Например, строка adbc
 * меньше строки adca, т.к. первые два символа в строках совпадают, а на третьем месте в строке adbc стоит символ b,
 * который меньше символа c, стоящего на третьей позиции в строке adca.
 *
 * Формат ввода
 * Вводится строка-палиндром, состоящая из маленьких букв латинского алфавита. Длина строки не превосходит 1000.
 *
 * Формат вывода
 * Выведите лексикографически минимальную строку, не являющуюяся палиндромом, полученную из исходной строки заменой
 * одного символа.
 *
 * Если получить такую строку невозможно - выведите пустую строку.
 *
 * Пример 1
 * abba
 * Вывод
 * aaba
 *
 * Пример 2
 * a
 * Вывод
 *
 */
class TaskE1 {
    private val scan = java.util.Scanner(System.`in`)
    private val palindrome = scan.nextLine()


    fun printAnswer() {
        if (palindrome.length == 1) {
            print("")
            return
        }

        val middle = palindrome.length / 2
        for (i in 0 until middle) {
            if (palindrome[i] != 'a') {
                print(palindrome.replaceRange(i, i + 1, "a"))
                return
            }
        }
        print(
            palindrome.replaceRange(palindrome.length - 1, palindrome.length, "b")
        )
    }
}