/**
 * A. Строительство лесенок
 *
 * Вася занимается строительством лесенок из блоков. Лесенка состоит из ступенек,
 * при этом i-ая ступенька должна состоять ровно из i блоков. По заданному числу
 * блоков n определите максимальное количество ступенек в лесенке, которую можно
 * построить из этих блоков.
 *
 * Формат ввода
 * Ввводится одно число n (1 ≤ n ≤ 2e31 - 1).
 *
 * Формат вывода
 * Выведите одно число — количество ступенек в лесенке.
 *
 * Пример 1
 * Ввод 5
 * Вывод 2
 *
 * Пример 2
 * Ввод 8
 * Вывод 3
 *
 * Решение:
 * 1. Вводимое число 2е31 - 1, у Int максимальное значение - 2e31 - 1, следовательно выбираем Long
 * 2. У нас арифметическая прогрессия с шагом в 1.
 * 2. Решение через цикл. Сложность O(n)
 * 3. Решение через формулу суммы членов арифметической прогрессии S = (n * (n - 1) / 2). После преобразований
 * получится квадратное уравнение ne2 + n - s * S = 0. тогда n будет равно (-1 + sqr(1 + 8 * S)) / 2
 * Сложность O(1)
 */


class TaskA1Solution {
    private val scan = java.util.Scanner(System.`in`)
    private val countBlock = scan.nextLong()

    init {
        println(
            ((-1 + Math.sqrt((1 + 8 * countBlock).toDouble())) / 2).toInt()
        )
    }
}
