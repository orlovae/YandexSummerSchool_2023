/**
Богдан учится в Хогвартсе на факультете зельеварения. Завтра ему сдавать свой выпускной проект, но он ничего не
успел подготовить. У него есть n ингредиентов, из которых можно сварить зелья. Зелье может состоять либо из одного
ингредиента, либо из двух различных. Каждое зелье характеризуется его полезностью. Полезность — это целое число от
−10e6 до 10e6. Богдану нужно сварить k зелий так, чтобы их суммарная полезность была максимальной (полезность
зелья — это сумма полезностей ингредиентов, из которых оно состоит). Очень важно, чтобы все зелья в проекте были
различны. Два зелья считаются различными, если найдется хотя бы один ингредиент, который отсутствует в одном зелье,
но присутствует в другом. Помогите Богдану с проектом и подсчитайте максимальную суммарную полезность зелий,
которую он может получить.
Формат ввода
В первой строке записано два числа n и k (1≤n≤10e5,1≤k≤(n*(n+1))/2) - количество ингредиентов и количество зелий,
которые нужно приготовить.
В следующей строке заданы n целых чисел ai(−10e6≤ai≤10e6) — полезность ингредиентов.

Формат вывода
Выведите одно целое число — максимальную суммарную полезность зелий.
Пример 1
Ввод
5 5
-2 3 -5 5 1
Вывод
26
Пример 2
Ввод
2 1
-1 1
Вывод
1
 */
class TaskE3 {
    private val lineFirst = readln().split(" ").map { it.toInt() }
    private val potionsSize = lineFirst[1]
    private val valuePotionsList = readln().split(" ").map { it.toInt() }

    init {
        val potionsSet = mutableSetOf<Int>()
        valuePotionsList.forEach { ingredientOne ->
            potionsSet.add(ingredientOne)
            valuePotionsList.forEach { ingredientTwo ->
                potionsSet.add(ingredientOne + ingredientTwo)
            }
        }

        val sortedSet = potionsSet.sorted()
        val last = sortedSet.lastIndex
        val first = last - potionsSize

        print(
            sortedSet
                .subList(first, last)
                .sum()
        )
    }
}
